name: eaf-dev-stack

services:
  postgres:
    image: postgres:16.1-alpine
    container_name: eaf-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: eaf
      POSTGRES_USER: eaf
      POSTGRES_PASSWORD: eaf
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - eaf-postgres-data:/var/lib/postgresql/data
      - ./scripts/sql:/docker-entrypoint-initdb.d:ro
    networks:
      - eaf-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U eaf"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  keycloak:
    image: quay.io/keycloak/keycloak:26.0.0
    container_name: eaf-keycloak
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:?Set KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL_HOST: eaf-postgres
      KC_DB_URL_PORT: "5432"
      KC_DB_URL_DATABASE: eaf
      KC_DB_USERNAME: eaf
      KC_DB_PASSWORD: eaf
      KC_METRICS_ENABLED: "true"
      KC_HEALTH_ENABLED: "true"
    command:
      - "start-dev"
      - "--http-relative-path=/"
      - "--import-realm"
    ports:
      - "8180:8080"
    volumes:
      - eaf-keycloak-data:/opt/keycloak/data
      - ./shared/testing/src/main/resources/test-realm.json:/opt/keycloak/data/import/test-realm.json:ro
    networks:
      - eaf-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health/ready || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 60s

  redis:
    image: redis:7.2-alpine
    container_name: eaf-redis
    restart: unless-stopped
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    ports:
      - "6379:6379"
    networks:
      - eaf-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus:v2.53.1
    container_name: eaf-prometheus
    restart: unless-stopped
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    ports:
      - "9090:9090"
    volumes:
      - eaf-prometheus-data:/prometheus
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - eaf-network

  grafana:
    image: grafana/grafana:11.1.0
    container_name: eaf-grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: grafana
    ports:
      - "${GRAFANA_PORT:-3001}:3000"
    depends_on:
      - prometheus
    volumes:
      - eaf-grafana-data:/var/lib/grafana
    networks:
      - eaf-network

networks:
  eaf-network:
    name: eaf-network

volumes:
  eaf-postgres-data:
  eaf-keycloak-data:
  eaf-prometheus-data:
  eaf-grafana-data:
